<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: TransactionBody.proto

namespace Gradido;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>gradido.TransactionBody</code>
 */
final class TransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     * max 150 chars
     *
     * Generated from protobuf field <code>string memo = 1;</code>
     */
    private $memo = '';
    protected $data;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $memo
     *           max 150 chars
     *     @type \Gradido\StateCreateGroup $createGroup
     *     @type \Gradido\StateGroupChangeParent $groupChangeParent
     *     @type \Gradido\Transfer $transfer
     *     @type \Gradido\TransactionCreation $creation
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\TransactionBody::initOnce();
        parent::__construct($data);
    }

    /**
     * max 150 chars
     *
     * Generated from protobuf field <code>string memo = 1;</code>
     * @return string
     */
    public function getMemo()
    {
        return $this->memo;
    }

    /**
     * max 150 chars
     *
     * Generated from protobuf field <code>string memo = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setMemo($var)
    {
        GPBUtil::checkString($var, True);
        $this->memo = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.gradido.StateCreateGroup createGroup = 2;</code>
     * @return \Gradido\StateCreateGroup
     */
    public function getCreateGroup()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.gradido.StateCreateGroup createGroup = 2;</code>
     * @param \Gradido\StateCreateGroup $var
     * @return $this
     */
    public function setCreateGroup($var)
    {
        GPBUtil::checkMessage($var, \Gradido\StateCreateGroup::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.gradido.StateGroupChangeParent groupChangeParent = 3;</code>
     * @return \Gradido\StateGroupChangeParent
     */
    public function getGroupChangeParent()
    {
        return $this->readOneof(3);
    }

    /**
     * Generated from protobuf field <code>.gradido.StateGroupChangeParent groupChangeParent = 3;</code>
     * @param \Gradido\StateGroupChangeParent $var
     * @return $this
     */
    public function setGroupChangeParent($var)
    {
        GPBUtil::checkMessage($var, \Gradido\StateGroupChangeParent::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.gradido.Transfer transfer = 4;</code>
     * @return \Gradido\Transfer
     */
    public function getTransfer()
    {
        return $this->readOneof(4);
    }

    /**
     * Generated from protobuf field <code>.gradido.Transfer transfer = 4;</code>
     * @param \Gradido\Transfer $var
     * @return $this
     */
    public function setTransfer($var)
    {
        GPBUtil::checkMessage($var, \Gradido\Transfer::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.gradido.TransactionCreation creation = 5;</code>
     * @return \Gradido\TransactionCreation
     */
    public function getCreation()
    {
        return $this->readOneof(5);
    }

    /**
     * Generated from protobuf field <code>.gradido.TransactionCreation creation = 5;</code>
     * @param \Gradido\TransactionCreation $var
     * @return $this
     */
    public function setCreation($var)
    {
        GPBUtil::checkMessage($var, \Gradido\TransactionCreation::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getData()
    {
        return $this->whichOneof("data");
    }

}

